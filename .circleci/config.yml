version: 2.1

jobs:
  tests-java:
    parameters:
      maven-image:
        type: string
        default: &default-maven-image "cimg/openjdk:8.0"
      arg-line:
        type: string
        default: ""
    docker:
      - image: << parameters.maven-image >>
    steps:
      - checkout
      - restore_cache:
          name: Restoring Maven Cache
          keys:
            - &cache-key maven-cache_v1-<< parameters.maven-image >>-{{ checksum "pom.xml" }}
            - maven-cache_v3-<< parameters.maven-image >>-
      - run:
          name: "Running tests"
          command: |
            mvn -B -U clean install -DargLine="<< parameters.arg-line >>"
      - save_cache:
          name: Saving Maven Cache
          key: *cache-key
          paths:
            - ~/.m2
      - run:
          name: "Copying test results"
          when: always
          command: |
            mkdir test-results
            cp target/surefire-reports/*.xml test-results/ || true
      - store_test_results:
          path: test-results
      - run:
          name: "Copying artifacts"
          command: |
            mkdir artifacts
            cp -r target/*.jar artifacts/
      - store_artifacts:
          path: artifacts
      - run:
          name: Collecting coverage reports
          command: |
            curl -Os https://uploader.codecov.io/latest/linux/codecov
            curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM
            curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM.sig
            curl -s https://keybase.io/codecovsecurity/pgp_keys.asc | gpg --no-default-keyring --keyring trustedkeys.gpg --import
            gpgv codecov.SHA256SUM.sig codecov.SHA256SUM
            shasum -a 256 -c codecov.SHA256SUM
            chmod +x ./codecov
            ./codecov -f '/home/circleci/project/target/site/jacoco/jacoco.xml,/home/circleci/project/target/site/jacoco-it/jacoco.xml'

  check-dependencies:
    parameters:
      maven-image:
        type: string
        default: *default-maven-image
    docker:
      - image: *default-maven-image
    steps:
      - checkout
      - restore_cache:
          name: Restoring Maven Cache
          keys:
            - maven-cache_v1-<< parameters.maven-image >>-
      - run:
          name: "Check dependency rules"
          command: mvn enforcer:enforce -Drules=banDuplicatePomDependencyVersions,dependencyConvergence

  check-licenses:
    parameters:
      maven-image:
        type: string
        default: *default-maven-image
    docker:
      - image: << parameters.maven-image >>
    steps:
      - checkout
      - restore_cache:
          name: Restoring Maven Cache
          keys:
            - maven-cache_v1-<< parameters.maven-image >>-
      - run:
          name: "Check dependency licenses"
          command: mvn license:check -Dlicense.dependencies.enforce=true

workflows:
  version: 2
  build:
    jobs:
      # - check-dependencies
      - check-licenses
      - tests-java:
          name: jdk-8
      - tests-java:
          name: jdk-11
          maven-image: "cimg/openjdk:11.0"
      - tests-java:
          name: jdk-17
          maven-image: "cimg/openjdk:17.0"
          arg-line: "--add-opens=java.base/java.nio=ALL-UNNAMED"
      - tests-java:
          name: jdk-20
          maven-image: "cimg/openjdk:20.0"
          arg-line: "--add-opens=java.base/java.nio=ALL-UNNAMED"
