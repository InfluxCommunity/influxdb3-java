version: 2.1

parameters:
  influxdb3-core-env:
    type: string
    default: "INFLUXDB3_NODE_IDENTIFIER_PREFIX=node01,INFLUXDB3_OBJECT_STORE=file,INFLUXDB3_DB_DIR=/var/lib/influxdb3/data"
  default-maven-image:
    type: string
    default: "cimg/openjdk:11.0"

executors:
  docker-amd64-image:
    parameters:
      maven-image:
        type: string
        default: "cimg/openjdk:11.0"
    docker:
      - image: <<parameters.maven-image>>
      - image: influxdb:3-core
        environment:
          - INFLUXDB3_NODE_IDENTIFIER_PREFIX=node01
          - INFLUXDB3_OBJECT_STORE=file
          - INFLUXDB3_DB_DIR=/var/lib/influxdb3/data
  docker-arm64-image:
    parameters:
      maven-image:
        type: string
        default: "cimg/openjdk:11.0"
    docker:
      - image: <<parameters.maven-image>>
      - image: influxdb:3-core
        environment:
          - INFLUXDB3_NODE_IDENTIFIER_PREFIX=node01
          - INFLUXDB3_OBJECT_STORE=file
          - INFLUXDB3_DB_DIR=/var/lib/influxdb3/data
    resource_class: arm.medium

commands:
  upload-codecov-amd64:
    steps:
      - run:
          name: Collecting coverage reports
          command: |
            curl -Os https://uploader.codecov.io/latest/linux/codecov
            curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM
            curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM.sig
            curl -s https://keybase.io/codecovsecurity/pgp_keys.asc | gpg --no-default-keyring --keyring trustedkeys.gpg --import
            gpgv codecov.SHA256SUM.sig codecov.SHA256SUM
            shasum -a 256 -c codecov.SHA256SUM
            chmod +x ./codecov
            echo 11111
            uname -m
            ./codecov
  upload-codecov-arm64:
    steps:
      - run:
          name: Collecting coverage reports
          command: |
            curl -k https://keybase.io/codecovsecurity/pgp_keys.asc | gpg --no-default-keyring --keyring trustedkeys.gpg --import
            curl -Os https://uploader.codecov.io/v0.8.0/aarch64/codecov
            curl -Os https://uploader.codecov.io/v0.8.0/aarch64/codecov.SHA256SUM
            curl -Os https://uploader.codecov.io/v0.8.0/aarch64/codecov.SHA256SUM.sig
            gpgv codecov.SHA256SUM.sig codecov.SHA256SUM
            shasum -a 256 -c codecov.SHA256SUM
            echo 22222
            uname -m
            sudo chmod +x codecov

jobs:
  tests-java:
    parameters:
      maven-image:
        type: string
        default: &default-maven-image "cimg/openjdk:11.0"
      exe:
        type: executor
        default: docker-amd64-image
      arg-line:
        type: string
        default: "--add-opens=java.base/java.nio=ALL-UNNAMED"
    executor: << parameters.exe >>
    steps:
      - checkout
      - restore_cache:
          name: Restoring Maven Cache
          keys:
            - &cache-key maven-cache_v1-<< parameters.maven-image >>-{{ checksum "pom.xml" }}
            - maven-cache_v3-<< parameters.maven-image >>-
      - run:
          name: Setup InfluxDB service
          command: |
            ./scripts/influxdb-setup.sh \
              --export-url-as TESTING_INFLUXDB_URL \
              --export-db-as TESTING_INFLUXDB_DATABASE \
              --export-token-as TESTING_INFLUXDB_TOKEN
      - run:
          name: "Running tests"
          command: |
            mvn -B -U clean install -DargLine="@{argLine} << parameters.arg-line >>"
      - save_cache:
          name: Saving Maven Cache
          key: *cache-key
          paths:
            - ~/.m2
      - run:
          name: "Copying test results"
          when: always
          command: |
            mkdir test-results
            cp target/surefire-reports/*.xml test-results/ || true
      - store_test_results:
          path: test-results
      - run:
          name: "Copying artifacts"
          command: |
            mkdir artifacts
            cp -r target/*.jar artifacts/
      - store_artifacts:
          path: artifacts
      - when:
          condition:
            equal: [ docker-amd64-image, << parameters.exe >> ]
          steps:
            - upload-codecov-amd64
      - when:
          condition:
            equal: [ docker-arm64-image, << parameters.exe >> ]
          steps:
            - upload-codecov-arm64

  check-dependencies:
    parameters:
      maven-image:
        type: string
        default: *default-maven-image
    docker:
      - image: *default-maven-image
    steps:
      - checkout
      - restore_cache:
          name: Restoring Maven Cache
          keys:
            - maven-cache_v1-<< parameters.maven-image >>-
      - run:
          name: "Check dependency rules"
          command: mvn enforcer:enforce -Denforcer.rules=banDuplicatePomDependencyVersions,dependencyConvergence

  check-licenses:
    parameters:
      maven-image:
        type: string
        default: *default-maven-image
    docker:
      - image: << parameters.maven-image >>
    steps:
      - checkout
      - restore_cache:
          name: Restoring Maven Cache
          keys:
            - maven-cache_v1-<< parameters.maven-image >>-
      - run:
          name: "Check dependency licenses"
          command: mvn license:check -Dlicense.dependencies.enforce=true

  check-generate-site:
    parameters:
      maven-image:
        type: string
        default: *default-maven-image
    docker:
      - image: << parameters.maven-image >>
    steps:
      - checkout
      - restore_cache:
          name: Restoring Maven Cache
          keys:
            - maven-cache_v1-<< parameters.maven-image >>-
      - run:
          name: "Check generate site"
          command: mvn clean site site:stage -DskipTests

  deploy-snapshot:
    docker:
      - image: *default-maven-image
    steps:
      - run:
          name: Early return if this build is from a forked repository
          command: |
            if [[ $CIRCLE_PROJECT_USERNAME != "InfluxCommunity" ]]; then
              echo "Nothing to do for forked repositories, so marking this step successful"
              circleci step halt
            fi
      - checkout
      - run:
          name: Early return if this build is not a Snapshot version
          command: |
            sudo apt-get update
            sudo apt-get install libxml2-utils
            export PROJECT_VERSION=$(xmllint --xpath "//*[local-name()='project']/*[local-name()='version']/text()" pom.xml)
            echo "Project version: $PROJECT_VERSION"
            if [[ $PROJECT_VERSION != *SNAPSHOT ]]; then
              echo "Nothing to do for this build, so marking this step successful"
              circleci step halt
            fi
      - restore_cache:
          name: Restoring Maven Cache
          keys:
            - &cache-key-deploy maven-cache-deploy_v1-{{ checksum "pom.xml" }}
            - maven-cache-deploy_v1-
      - run:
          name: Deploying Snapshot
          command: |
            mvn -s ./deploy-settings.xml -DskipTests=true clean deploy
      - save_cache:
          name: Saving Maven Cache
          key: *cache-key-deploy
          paths:
            - ~/.m2

workflows:
  version: 2
  build:
    jobs:
      - check-dependencies
      - check-licenses
      - check-generate-site
      - tests-java:
          matrix:
            parameters:
              exe: [ docker-amd64-image, docker-arm64-image ]
              maven-image: [ "cimg/openjdk:11.0", "cimg/openjdk:17.0", "cimg/openjdk:20.0", "cimg/openjdk:21.0" ]
      - deploy-snapshot:
          requires:
            - check-dependencies
            - check-licenses
            - check-generate-site
            - tests-java
          filters:
            branches:
              only: main
