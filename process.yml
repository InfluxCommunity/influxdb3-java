#
# The MIT License
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
#

version: 2
jobs:
  check-dependencies:
    docker:
    - image: cimg/openjdk:11.0
    steps:
    - checkout
    - restore_cache:
        name: Restoring Maven Cache
        keys:
        - maven-cache_v1-cimg/openjdk:11.0-
    - run:
        name: Check dependency rules
        command: mvn enforcer:enforce -Denforcer.rules=banDuplicatePomDependencyVersions,dependencyConvergence
  check-licenses:
    docker:
    - image: cimg/openjdk:11.0
    steps:
    - checkout
    - restore_cache:
        name: Restoring Maven Cache
        keys:
        - maven-cache_v1-cimg/openjdk:11.0-
    - run:
        name: Check dependency licenses
        command: mvn license:check -Dlicense.dependencies.enforce=true
  check-generate-site:
    docker:
    - image: cimg/openjdk:11.0
    steps:
    - checkout
    - restore_cache:
        name: Restoring Maven Cache
        keys:
        - maven-cache_v1-cimg/openjdk:11.0-
    - run:
        name: Check generate site
        command: mvn clean site site:stage -DskipTests
  jdk-11:
    docker:
    - image: cimg/openjdk:11.0
    steps:
    - checkout
    - restore_cache:
        name: Restoring Maven Cache
        keys:
        - maven-cache_v1-cimg/openjdk:11.0-{{ checksum "pom.xml" }}
        - maven-cache_v3-cimg/openjdk:11.0-
    - run:
        name: Running tests
        command: |
          mvn -B -U clean install -DargLine="@{argLine} "
    - save_cache:
        name: Saving Maven Cache
        key: maven-cache_v1-cimg/openjdk:11.0-{{ checksum "pom.xml" }}
        paths:
        - ~/.m2
#    - run:
#        name: Copying test results
#        when: always
#        command: |
#          mkdir test-results
#          cp target/surefire-reports/*.xml test-results/ || true
#    - store_test_results:
#        path: test-results
#    - run:
#        name: Copying artifacts
#        command: |
#          mkdir artifacts
#          cp -r target/*.jar artifacts/
#    - store_artifacts:
#        path: artifacts
#    - run:
#        name: Collecting coverage reports
#        command: |
#          curl -Os https://uploader.codecov.io/latest/linux/codecov
#          curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM
#          curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM.sig
#          curl -s https://keybase.io/codecovsecurity/pgp_keys.asc | gpg --no-default-keyring --keyring trustedkeys.gpg --import
#          gpgv codecov.SHA256SUM.sig codecov.SHA256SUM
#          shasum -a 256 -c codecov.SHA256SUM
#          chmod +x ./codecov
#          ./codecov
  jdk-17:
    docker:
    - image: cimg/openjdk:17.0
    steps:
    - checkout
    - restore_cache:
        name: Restoring Maven Cache
        keys:
        - maven-cache_v1-cimg/openjdk:17.0-{{ checksum "pom.xml" }}
        - maven-cache_v3-cimg/openjdk:17.0-
    - run:
        name: Running tests
        command: |
          mvn -B -U clean install -DargLine="@{argLine} --add-opens=java.base/java.nio=ALL-UNNAMED"
    - save_cache:
        name: Saving Maven Cache
        key: maven-cache_v1-cimg/openjdk:17.0-{{ checksum "pom.xml" }}
        paths:
        - ~/.m2
    - run:
        name: Copying test results
        when: always
        command: |
          mkdir test-results
          cp target/surefire-reports/*.xml test-results/ || true
    - store_test_results:
        path: test-results
    - run:
        name: Copying artifacts
        command: |
          mkdir artifacts
          cp -r target/*.jar artifacts/
    - store_artifacts:
        path: artifacts
    - run:
        name: Collecting coverage reports
        command: |
          curl -Os https://uploader.codecov.io/latest/linux/codecov
          curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM
          curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM.sig
          curl -s https://keybase.io/codecovsecurity/pgp_keys.asc | gpg --no-default-keyring --keyring trustedkeys.gpg --import
          gpgv codecov.SHA256SUM.sig codecov.SHA256SUM
          shasum -a 256 -c codecov.SHA256SUM
          chmod +x ./codecov
          ./codecov
  jdk-20:
    docker:
    - image: cimg/openjdk:20.0
    steps:
    - checkout
    - restore_cache:
        name: Restoring Maven Cache
        keys:
        - maven-cache_v1-cimg/openjdk:20.0-{{ checksum "pom.xml" }}
        - maven-cache_v3-cimg/openjdk:20.0-
    - run:
        name: Running tests
        command: |
          mvn -B -U clean install -DargLine="@{argLine} --add-opens=java.base/java.nio=ALL-UNNAMED"
    - save_cache:
        name: Saving Maven Cache
        key: maven-cache_v1-cimg/openjdk:20.0-{{ checksum "pom.xml" }}
        paths:
        - ~/.m2
    - run:
        name: Copying test results
        when: always
        command: |
          mkdir test-results
          cp target/surefire-reports/*.xml test-results/ || true
    - store_test_results:
        path: test-results
    - run:
        name: Copying artifacts
        command: |
          mkdir artifacts
          cp -r target/*.jar artifacts/
    - store_artifacts:
        path: artifacts
    - run:
        name: Collecting coverage reports
        command: |
          curl -Os https://uploader.codecov.io/latest/linux/codecov
          curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM
          curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM.sig
          curl -s https://keybase.io/codecovsecurity/pgp_keys.asc | gpg --no-default-keyring --keyring trustedkeys.gpg --import
          gpgv codecov.SHA256SUM.sig codecov.SHA256SUM
          shasum -a 256 -c codecov.SHA256SUM
          chmod +x ./codecov
          ./codecov
  jdk-21:
    docker:
    - image: cimg/openjdk:21.0
    steps:
    - checkout
    - restore_cache:
        name: Restoring Maven Cache
        keys:
        - maven-cache_v1-cimg/openjdk:21.0-{{ checksum "pom.xml" }}
        - maven-cache_v3-cimg/openjdk:21.0-
    - run:
        name: Running tests
        command: |
          mvn -B -U clean install -DargLine="@{argLine} --add-opens=java.base/java.nio=ALL-UNNAMED"
    - save_cache:
        name: Saving Maven Cache
        key: maven-cache_v1-cimg/openjdk:21.0-{{ checksum "pom.xml" }}
        paths:
        - ~/.m2
    - run:
        name: Copying test results
        when: always
        command: |
          mkdir test-results
          cp target/surefire-reports/*.xml test-results/ || true
    - store_test_results:
        path: test-results
    - run:
        name: Copying artifacts
        command: |
          mkdir artifacts
          cp -r target/*.jar artifacts/
    - store_artifacts:
        path: artifacts
    - run:
        name: Collecting coverage reports
        command: |
          curl -Os https://uploader.codecov.io/latest/linux/codecov
          curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM
          curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM.sig
          curl -s https://keybase.io/codecovsecurity/pgp_keys.asc | gpg --no-default-keyring --keyring trustedkeys.gpg --import
          gpgv codecov.SHA256SUM.sig codecov.SHA256SUM
          shasum -a 256 -c codecov.SHA256SUM
          chmod +x ./codecov
          ./codecov
  deploy-snapshot:
    docker:
    - image: cimg/openjdk:11.0
    steps:
    - run:
        name: Early return if this build is from a forked repository
        command: |
          if [[ $CIRCLE_PROJECT_USERNAME != "InfluxCommunity" ]]; then
            echo "Nothing to do for forked repositories, so marking this step successful"
            circleci step halt
          fi
    - checkout
    - run:
        name: Early return if this build is not a Snapshot version
        command: |
          sudo apt-get update
          sudo apt-get install libxml2-utils
          export PROJECT_VERSION=$(xmllint --xpath "//*[local-name()='project']/*[local-name()='version']/text()" pom.xml)
          echo "Project version: $PROJECT_VERSION"
          if [[ $PROJECT_VERSION != *SNAPSHOT ]]; then
            echo "Nothing to do for this build, so marking this step successful"
            circleci step halt
          fi
    - restore_cache:
        name: Restoring Maven Cache
        keys:
        - maven-cache-deploy_v1-{{ checksum "pom.xml" }}
        - maven-cache-deploy_v1-
    - run:
        name: Deploying Snapshot
        command: |
          mvn -s ./deploy-settings.xml -DskipTests=true clean deploy
    - save_cache:
        name: Saving Maven Cache
        key: maven-cache-deploy_v1-{{ checksum "pom.xml" }}
        paths:
        - ~/.m2
workflows:
  version: 2
  build:
    jobs:
    - check-dependencies
    - check-licenses
    - check-generate-site
    - jdk-11
    - jdk-17
    - jdk-20
    - jdk-21
    - deploy-snapshot:
        filters:
          branches:
            only: main
        requires:
        - check-dependencies
        - check-licenses
        - check-generate-site
        - jdk-11
        - jdk-17
        - jdk-20
        - jdk-21
        upstream:
          check-dependencies:
          - success
          check-licenses:
          - success
          check-generate-site:
          - success
          jdk-11:
          - success
          jdk-17:
          - success
          jdk-20:
          - success
          jdk-21:
          - success
